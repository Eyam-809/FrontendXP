// Script de prueba para verificar la integraci√≥n frontend-backend
// Ejecutar con: node test-verification-integration.js

const testVerificationFlow = async () => {
  const API_BASE = 'http://localhost:3000/api';
  const phoneNumber = '9992694926';

  console.log('üß™ Iniciando prueba de integraci√≥n de verificaci√≥n...\n');

  try {
    // Paso 1: Enviar c√≥digo
    console.log('1Ô∏è‚É£ Enviando c√≥digo de verificaci√≥n...');
    const sendResponse = await fetch(`${API_BASE}/verificacion/enviar-codigo`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        telefono: phoneNumber
      }),
    });

    const sendData = await sendResponse.json();
    
    if (sendResponse.ok) {
      console.log('‚úÖ C√≥digo enviado exitosamente');
      console.log(`   üì± N√∫mero: ${sendData.phone_number}`);
      console.log(`   ‚è∞ Expira en: ${sendData.expires_in_minutes} minutos`);
      console.log(`   üì® Mensaje: ${sendData.message}\n`);
      
      // Paso 2: Simular verificaci√≥n (usar c√≥digo de prueba)
      console.log('2Ô∏è‚É£ Verificando c√≥digo (simulaci√≥n)...');
      const testCode = '1234'; // C√≥digo de prueba
      
      const verifyResponse = await fetch(`${API_BASE}/verificacion/verificar-codigo`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          telefono: phoneNumber,
          codigo: testCode
        }),
      });

      const verifyData = await verifyResponse.json();
      
      if (verifyResponse.ok && verifyData.verified) {
        console.log('‚úÖ C√≥digo verificado exitosamente');
        console.log(`   üì± N√∫mero verificado: ${verifyData.phone_number}`);
        console.log(`   üéâ Estado: ${verifyData.message}\n`);
      } else {
        console.log('‚ö†Ô∏è Verificaci√≥n fall√≥ (esperado para c√≥digo de prueba)');
        console.log(`   ‚ùå Error: ${verifyData.message || verifyData.error}\n`);
      }
      
    } else {
      console.log('‚ùå Error al enviar c√≥digo');
      console.log(`   Error: ${sendData.error || sendData.message}\n`);
    }

    console.log('üéØ Prueba completada');
    console.log('\nüìã Flujo de verificaci√≥n:');
    console.log('   1. Usuario ingresa n√∫mero de tel√©fono');
    console.log('   2. Frontend llama a /api/verificacion/enviar-codigo');
    console.log('   3. Backend env√≠a SMS con c√≥digo de 4 d√≠gitos');
    console.log('   4. Usuario ingresa c√≥digo recibido');
    console.log('   5. Frontend llama a /api/verificacion/verificar-codigo');
    console.log('   6. Backend valida el c√≥digo');
    console.log('   7. Usuario es redirigido a la p√°gina principal');

  } catch (error) {
    console.error('‚ùå Error en la prueba:', error.message);
    console.log('\nüîß Verifica que:');
    console.log('   - El frontend est√© ejecut√°ndose en http://localhost:3000');
    console.log('   - El backend est√© ejecut√°ndose en http://localhost:8000');
    console.log('   - Las rutas API est√©n configuradas correctamente');
  }
};

// Ejecutar la prueba
testVerificationFlow();



